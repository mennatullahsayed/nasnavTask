openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9020
  description: Generated server url
paths:
  /user/picture:
    post:
      tags:
      - user-uploads-controller
      operationId: UploadsPicture
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                uploadsPicture:
                  $ref: '#/components/schemas/Uploads'
      responses:
        "200":
          description: OK
  /auth/signup:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /auth/signin:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /admin/picture/{pictureId}:
    get:
      tags:
      - admin-controller
      operationId: getPictureById_1
      parameters:
      - name: pictureId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    patch:
      tags:
      - admin-controller
      operationId: updateStatus
      parameters:
      - name: pictureId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /all/pictures/accepted:
    get:
      tags:
      - uploads-controller
      operationId: getAcceptedPictures
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /all/picture/{pictureId}:
    get:
      tags:
      - uploads-controller
      operationId: getPictureById
      parameters:
      - name: pictureId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /admin/pictures/unprocessed:
    get:
      tags:
      - admin-controller
      operationId: getUnprocessedPictures
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
                    format: byte
components:
  schemas:
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          enum:
          - USER
          - ADMIN
    Uploads:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        attachment:
          type: array
          items:
            type: string
            format: byte
        status:
          type: string
          enum:
          - accepted
          - rejected
          - unprocessed
        urls:
          type: string
        category:
          type: string
          enum:
          - livingThing
          - machine
          - nature
        user:
          $ref: '#/components/schemas/User'
        originalFilename:
          type: string
    User:
      required:
      - email
      - password
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          maxLength: 20
          minLength: 0
          type: string
        email:
          maxLength: 50
          minLength: 0
          type: string
        password:
          maxLength: 120
          minLength: 0
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        picture:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Uploads'
    SignUpRequest:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 2
          type: string
        email:
          maxLength: 50
          minLength: 12
          type: string
        role:
          uniqueItems: true
          type: array
          items:
            type: string
        password:
          maxLength: 40
          minLength: 6
          type: string
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
